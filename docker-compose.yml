# Use the lastest version of docker-compose syntax
version: '3'

# Define the services
services:

  router:
    build: ./router_svc
    ports:
     - "8080:${ROUTER_PORT}"
    volumes:
     - ./router_svc:/router
    #  - /router/node_modules/
    restart: always
    depends_on:
     - store
     - payments
     - auth
    environment:
     - AUTH_NAME=${AUTH_NAME}
     - AUTH_PORT=${AUTH_PORT}
     - STORE_NAME=store
     - STORE_PORT=${STORE_PORT}
     - PAYMENTS_NAME=payments
     - PAYMENTS_PORT=${PAYMENTS_PORT}
     - ROUTER_PORT=${ROUTER_PORT}
    command: nodemon index.js

  payments:
    build: ./payments_svc
    ports:
     - ${PAYMENTS_PORT}
    volumes:
     - ./payments_svc:/payments
    environment:
     - SK_STRIPE=${SK_STRIPE}
     - PAYMENTS_PORT=${PAYMENTS_PORT}
    command: nodemon index.js

  store:
    # Go to specified folder and look for the service's Dockerfile there
    build: ./store_svc
    # Map hostPort:containerPort (host is on twhe left!)
    ports:
     - ${STORE_PORT}
    volumes:
     - ./store_svc:/server
     - /server/node_modules
    # Define dependency, so that store can connect to db
    depends_on:
     - db
    # Map the local dev files to enable nodemon inside docker container
    volumes:
     - ./store_svc:/server
     - /server/node_modules/
    # Set environment variable, which is overwritten
    environment:
     - DB_USER=${DB_USER}
     - DB_PASSWORD=${DB_PASSWORD}
     - DB_NAME=${DB_NAME}
     - DB_HOST=${DB_HOST}
     - DB_PORT=${DB_PORT}
     - STORE_PORT=${STORE_PORT}
     - JWT_SECRET=${JWT_SECRET}
     - SK_STRIPE=${SK_STRIPE}

  db:
    # Go to specified folder and look for the service's Dockerfile there
    build: ./db_svc
    # Map hostPort:containerPort (host is on the left!)
    ports:
     - ${DB_PORT}
    # Set up a default mySQL db
    environment:
     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     - MYSQL_DATABASE=${DB_NAME}

  auth:
    # Go to specified folder and look for the service's Dockerfile there
    build: ./auth_svc
    # Map hostPort:containerPort (host is on the left!)
    ports:
     - ${AUTH_PORT}
    # Map the local dev files to enable nodemon inside docker container
    volumes:
     - ./auth_svc:/auth
     - /auth/node_modules/
    # Define dependency, so that store can connect to db
    depends_on:
     - auth_db
    # Set the environment variables
    environment:
     - AUTH_DB_USER=${AUTH_DB_USER}
     - AUTH_DB_PASSWORD=${AUTH_DB_PASSWORD}
     - AUTH_DB_NAME=${AUTH_DB_NAME}
     - AUTH_DB_HOST=${AUTH_DB_HOST}
     - AUTH_DB_PORT=${AUTH_DB_PORT}
     - JWT_SECRET=${JWT_SECRET}
     - SK_STRIPE=${SK_STRIPE}

  auth_db:
    # Go to specified folder and look for the service's Dockerfile there
    build: ./auth_db_svc
    # Map hostPort:containerPort (host is on the left!)
    ports:
     - ${AUTH_DB_PORT}
    # Set up a default mySQL db
    environment:
     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
     - MYSQL_DATABASE=${AUTH_DB_NAME}